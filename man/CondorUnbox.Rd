% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CondorUnbox.R
\name{CondorUnbox}
\alias{CondorUnbox}
\title{CondorUnbox: Synchronise Remote Job Output with Local Directory}
\usage{
CondorUnbox(
  remote_user,
  remote_host,
  remote_dir,
  local_git_dir = getwd(),
  remote_output_file = "output_archive.tar.gz",
  overwrite = FALSE
)
}
\arguments{
\item{remote_user}{Character. The username for the remote server.}

\item{remote_host}{Character. The remote server address.}

\item{remote_dir}{Character. The directory on the remote server containing the output archive.}

\item{local_git_dir}{Character. The local directory (typically a Git project) where 
the archive contents will be extracted. Defaults to the current working directory.}

\item{remote_output_file}{Character. The name of the output archive on the remote server. 
Defaults to "output_archive.tar.gz".}

\item{overwrite}{Logical. Whether to overwrite existing files in the local directory. 
Defaults to \code{FALSE}.}
}
\value{
No return value. Outputs are downloaded, extracted, and synchronised with 
  the specified local directory.
}
\description{
Downloads and extracts a remote archive created by a Condor job to synchronise 
the output files with a local Git project directory. The function optionally 
skips overwriting existing files in the destination directory.
}
\details{
This function:
\itemize{
  \item Downloads the output archive from a remote server using \code{scp}.
  \item Extracts the contents of the archive to a temporary directory.
  \item Moves the extracted files to the specified local directory, optionally skipping files 
        that already exist (controlled by the \code{overwrite} parameter).
  \item Cleans up temporary files after synchronisation.
}

A progress bar is displayed to indicate the function's progress through its steps.
}
\examples{
\dontrun{
CondorUnbox(
  remote_user = "myuser",
  remote_host = "remote.server.com",
  remote_dir = "/home/myuser/jobs",
  local_git_dir = "/path/to/my/local/git/project",
  remote_output_file = "output_archive.tar.gz",
  overwrite = FALSE
)
}

}
